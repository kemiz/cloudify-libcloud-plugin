#######
# Cloudify Libcloud definitions.

plugins:
    libcloud:
        executor: central_deployment_agent
        source: https://github.com/kemiz/cloudify-libcloud-plugin/archive/1.2.1-build.zip
    diamond:
      executor: host_agent
      source: https://github.com/cloudify-cosmo/cloudify-diamond-plugin/archive/1.2.1.zip

relationships:
  cloudify.libcloud.server_connected_to_floating_ip:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: libcloud.server_plugin.server.connect_floating_ip
          inputs: {}
        unlink:
          implementation: libcloud.server_plugin.server.disconnect_floating_ip
          inputs: {}
  cloudify.libcloud.server_connected_to_security_group:
    derived_from: cloudify.relationships.connected_to

node_types:
  cloudify.libcloud.nodes.FloatingIP:
    derived_from: cloudify.nodes.VirtualIP
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: libcloud.floating_ip_plugin.floating_ip.create
          inputs: {}
        delete:
          implementation: libcloud.floating_ip_plugin.floating_ip.delete
          inputs: {}
    properties:
      floatingip:
        default: {}
      connection_config:
        default: {}

  cloudify.libcloud.nodes.SecurityGroup:
    derived_from: cloudify.nodes.SecurityGroup
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: libcloud.security_group_plugin.security_group.create
          inputs: {}
        delete:
          implementation: libcloud.security_group_plugin.security_group.delete
          inputs: {}
    properties:
      security_group: {}
      connection_config:
        default: {}
      rules:
        default: []
      disable_egress:
        default: false

  cloudify.libcloud.nodes.Server:
    derived_from: cloudify.nodes.Compute
    interfaces:
      cloudify.interfaces.host:
        get_state:
          implementation: libcloud.server_plugin.server.get_state
          inputs: {}
      cloudify.interfaces.lifecycle:
        start:
          implementation: libcloud.server_plugin.server.start
          inputs: {}
        stop:
          implementation: libcloud.server_plugin.server.stop
          inputs: {}
        delete:
          implementation: libcloud.server_plugin.server.delete
          inputs: {}
    properties:
      server: {}
      connection_config:
        default: {}
      config_service:
        default:
          service_url: localhost
          service_port: 8180
          cloud_id: ''


  cloudify.libcloud.nodes.MonitoredServer:
    derived_from: cloudify.libcloud.nodes.Server
    interfaces:
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                default:
                  interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                default:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}

